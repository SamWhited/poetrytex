% \iffalse
%<*internal>
\begingroup
\input docstrip.tex
\keepsilent
\usedir{tex/latex/poetrytex}
\preamble

  Copyright 2012 Samuel Whited

  This file may be distributed and/or modified under the
  conditions of the LaTeX Project Public License, either
  version 1.3c of this license or (at your option) any later
  version. The latest version of this license is in:

  http://www.latex-project.org/lppl.txt

  and version 1.3c or later is part of all distributions of
  LaTeX version 2008/05/04 or later.

\endpreamble
\postamble

  ___________
  Maintainer: Sam Whited
  Website:    https://samwhited.com
  Contact:    sam@samwhited.com
  Public key: 0xEC2C9934

  This work consists of this file poetrytex.dtx
            and the derived files poetrytex.sty
                              and poetrytex.pdf

\endpostamble
\askforoverwritefalse

\generate{\file{poetrytex.sty}{\from{poetrytex.dtx}{poetrytex}}}
\generate{\file{poetrytex-style.sty}{\from{poetrytex.dtx}{doc-style}}}

\obeyspaces
\Msg{****************************************************}
\Msg{*                                                  *}
\Msg{* To finish the installation you have to move the  *}
\Msg{* following file into a directory searched by TeX: *}
\Msg{*                                                  *}
\Msg{* poetrytex.sty                                    *}
\Msg{*                                                  *}
\Msg{****************************************************}

\endgroup
%</internal>
%
%<*driver>
\ProvidesFile{poetrytex.dtx}
%</driver>
%<poetrytex>\ProvidesPackage{poetrytex}
%
%<*driver>
\documentclass[a4paper]{ltxdoc}
\usepackage{poetrytex-style}
\usepackage{poetrytex}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
%\OnlyDescription
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
%
% \fi
%
% \GetFileInfo{poetrytex.dtx}
% \makeatletter
% \errorcontextlines=999
%
% \title{The \textsf{poetrytex} package}
% \author{
%   \name{Sam Whited}\\
%   \texttt{sam@samwhited.com}
% }
% \date{\today\\v1.0\gitrev\gitdirty\gituncommitted}
%
% \maketitle
% \maketoc
% \maketop*
%
% \section{Introduction}
%
% The \pkg{poetrytex} package is designed to aid in the formatting and
% typesetting of anthologies of poetry.
%
% \subsection{History}
%
% The package started out as a collection of macros for automating simple tasks
% that I often had to perform while working on a collection of poetry and prose.
% After a time, I decided to turn it into an STY file which would be geared
% more towards the idea of an anthology or a collection of works and less about
% typesetting the verse itself (for which there were already several good
% packages on CTAN). While the file was small this worked well---Learning to
% use the package was easily accomplished by reading the annotated source code
% (generated via a modified version of Jeremy Ashkenas' literate programming
% tool `docco'). However, as the source and scope of the project grew I decided
% to move away from docco and start working on a proper package that would use
% more traditional \TeX-style docs.
%
% \subsection{About the source}
%
% The current design of \pkg{poetrytex} makes it usable only with \TeX\ engines
% that natively support Unicode input and OpenType fonts, specifically XeLaTeX.
%
% I would like to eventually test it with \LuaTeX\ and work on a version with
% the OpenType features removed to facilitate compatibility with pdf\LaTeX.
%
% Contributions are welcome, and the latest development version of the project
% can always be found at \url{https://github.com/samwhited/poetrytex}.
%
% \subsection{Acknowledgements}
%
% A special thanks is in order for Brittany Taylor. Though she probably has no
% idea what \TeX\ is or that this project even exists it is due mostly to her
% influence that it ever got off the ground.
%
% \section{Package building and loading}
%
%    \begin{macrocode}
%<*poetrytex>
%    \end{macrocode}
%
% \paragraph{Building}
%
% Before building \pkg{poetrytex} you should verify that the following
% dependencies are installed:
%    \begin{macrocode}
\RequirePackage{fontspec}
\RequirePackage[pdfborder=0, bookmarks, colorlinks=false]{hyperref}
\RequirePackage[parfill]{parskip}
%    \end{macrocode}
% Once you have all the required packages, building \pkg{poetrytex} from source
% can be acomplished in multiple ways. If the Makefile is present running
% \code{make help} will tell you everything you need to know. To manually
% extract the files and generate the documentation simply run \XeLaTeX\ against
% \fname{poetrytex.dtx}:
%
% \begin{Verbatim}
%   xelatex poetrytex.dtx
% \end{Verbatim}
%
% You can also run \XeLaTeX\ with the \code{-{}-shell-escape} option to generate
% documentation which includes the current git commit short-hash in the version
% number:
%
% \begin{Verbatim}
%   xelatex --shell-escape poetrytex.dtx
% \end{Verbatim}
%
% It should be noted that this option is extremely unsafe, and you should only
% use it if you understand the risks.
%
%
% \paragraph{Loading}
%
% Using \pkg{pdflatex} works exactly as you expect:
% \begin{Verbatim}
%   \usepackage{poetrytex}
% \end{Verbatim}
%
%
% \part{Document setup and structure}
%
% The \pkg{poetrytex} package is fairly simple as far as \TeX\ packages go, so
% it's worth taking a look at how it works internally.
%
% \section{Environment setup and defaults}
%
% First we setup our environment, define some useful properties, and choose some
% default values for those properties.
%
% \subsection{Title page}
%
% We'll start with the title page:
%
%    \begin{macrocode}
\newcommand*{\pttitle}{Title}
\newcommand*{\ptsubtitle}{Subtitle}
\newcommand*{\ptauthor}{Author}
\newcommand*{\ptdate}{\today}
%    \end{macrocode}
%
% Since we define the properties above as commands, you can change the
% appearance of your document by redefining them in your preamble like so:
%
% \begin{Verbatim}
%   \renewcommand*{\pttitle}{My Title}
%   \renewcommand*{\ptauthor}{The Author}
% \end{Verbatim}
%
% We then use these properties to set the document title, author, and date:
%    \begin{macrocode}
\title{%
  \pttitle%
  \ifx\ptsubtitle\@ptundefined\relax\else\\\ptsubtitle\fi%
}
\author{\ptauthor}
\date{\ptdate}
%    \end{macrocode}
% Since \code{\textbackslash maketitle} clears the internal title, author, and
% date we use the \code{\textbackslash pt} equivalents so that we can refer to
% them again later, or redefine them throughout the document---in anthologies
% with works by multiple authors, for instance.
%    \begin{macrocode}
\newcommand*{\@ptpoemlabeltext}{poetrytexpoem:}
%    \end{macrocode}
% Each time you create a poem in your document we automatically assign it a
% special label that can be used to link to it later. This label is prefixed
% with \code{\textbackslash @ptpoemlabeltext} to prevent it from conflicting
% with user defined labels, or labels defined in other packages.
%
% Chances are you'll never need to touch this.
%
% \subsection{Dedication}
%
% After your title page you might want to add a dedication page.
%
% \begin{macro}{\makededication}
% As with the \code{\textbackslash pttitle} and author commands you can simply
% redefine \code{\textbackslash ptdedication} to change the dedication text.
%    \begin{macrocode}
\newcommand*{\ptdedication}{}
\newcommand*{\makededication}[0]{%
  \thispagestyle{empty}
  \vspace*{\fill}
  \begin{flushright}
    \emph{\ptdedication}
  \end{flushright}
  \vspace*{\fill}
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Tables and links}
%
% Next we setup the table of contents and list of poems:
%    \begin{macrocode}
\setcounter{secnumdepth}{-1}
\setcounter{tocdepth}{2}
\newcommand*{\toptitle}{List of Poems}
\renewcommand*{\listtablename}{\toptitle}
\newcommand*{\topentrytype}{subsection}
%    \end{macrocode}
%
% First, we set the \code{secnumdepth} and \code{tocdepth} counters to disable
% chapter, section, and subsection numbering, and to limit the maximum depth of
% entries in the TOC. We then choose a default value for \code{\textbackslash%
% toptitle} which will be rendered atop the Table of Poems, and set the default
% entry type for poems to `subsection.' As with the previous options, these can
% all be redefined to suit your needs.
%
% \begin{macro}{\maketoc}
% \begin{macro}{\maketop}
% \begin{macro}{\maketop*}
% Once you've configured the TOC and TOP you probably want to insert them into
% your document somewhere. While you could just use the \LaTeX\ commands \code{%
% \textbackslash tableofcontents} and \code{\textbackslash listoftables}, we
% provide alternates that add a bit of formatting and clear the page. By default
% the TOP creates a listing in the TOC---Using the star modifier prevents this.
%    \begin{macrocode}
\newcommand*{\maketoc}{%
  \tableofcontents
  \pagestyle{plain}
  \clearpage
  \thispagestyle{empty}
}
\newcommand*{\maketop}{\@ifstar{\@ptmaketopStar}{\@ptmaketopNoStar}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%    \begin{macrocode}
\newcommand*{\@ptmaketopStar}{%
  \listoftables
  \pagestyle{plain}
  \clearpage
}
\newcommand*{\@ptmaketopNoStar}{%
  \cleardoublepage
  \phantomsection
  \addcontentsline{toc}{section}{\toptitle}
  \listoftables
  \pagestyle{plain}
  \clearpage
}
%    \end{macrocode}
%
% \part{Poems and annotations}
%
% Now that we've got all the boilerplate, configuration, titles, tables, and
% properties out of the way, it's time to move on to the core functionality of
% \pkg{poetrytex}: displaying and organizing poems!
%
% \section{The \code{poem} environment}
%
% Inserting a poem or other writing into your anthology is acomplished by
% wrapping it in the \code{poem} environment. This environment takes in two
% arguments, the title and subtitle (or author, date, etc.) of the poem.
%    \begin{macrocode}
\newenvironment{poem}[3][verse]{%
%    \end{macrocode}
%
% By default \code{poem} re-wraps your text in the \code{verse} environment.
% However, this can be changed by passing in an optional argument with the name
% of another environment to wrap it in (eg. \code{center}).
%
%    \begin{macrocode}
  \newcommand*{\@ptwrapenvironment}{#1}
%    \end{macrocode}
% \clearpage
% For example, a poem wrapped in the \code{center} environment might look like
% this:
% \setlength\columnseprule{.4pt}
% \begin{multicols}{2}
% \begin{Verbatim}
% \begin{poem}[center]
% {The Sea Bell}
% {J.R.R. Tolkien}
% I walked by the sea,
% and there came to me,\\
% as a star-beam on the wet sand,\\
% a white shell like a sea-bell;\\
% trembling it lay
% in my wet hand.\\
% In my fingers shaken
% I heard waken\\
% a ding within, by a harbour bar\\
% a buoy swinging, a call ringing\\
% over endless seas,
% faint now and far\ldots
% \end{poem}
% \end{Verbatim}
% \columnbreak
% \begin{poem}[center]
% {The Sea Bell}
% {J.R.R. Tolkien}
% I walked by the sea,
% and there came to me,\\
% as a star-beam on the wet sand,\\
% a white shell like a sea-bell;\\
% trembling it lay in my wet hand.\\
% In my fingers shaken I heard waken\\
% a ding within, by a harbour bar\\
% a buoy swinging, a call ringing\\
% over endless seas,
% faint now and far\ldots
% \end{poem}
% \end{multicols}
%    \begin{macrocode}
  \poetryheadings
  \addtocounter{poemnum}{1}
  \addtocounter{absolutepoemnum}{1}
  \begin{center}
    \phantomsection%
    \addcontentsline{lot}{\topentrytype}{\ifx\@ptnumbertop\@ptundefined\relax\else\arabic{poemnum}.\ \fi#2}%
    \label{\@ptpoemlabeltext\arabic{absolutepoemnum}}
    {\poemtitleformat \ifx\@ptnumberpoems\@ptundefined\relax\else\arabic{poemnum}\\\fi#2}\\%
    #3
  \end{center}
  \begin{\@ptwrapenvironment}
  \begingroup\setlength{\parskip}{\stanzaparskip}
}{%
  \endgroup
  \end{\@ptwrapenvironment}
  \ifx \@ptclearpageafterpoem \@ptundefined
    \relax
  \else
    \clearpage
  \fi
}

\newcommand*{\poetryheadings}[0]{%
  \pagestyle{myheadings}
  \markboth{ | \MakeUppercase{\pttitle}\hfill }{\hfill\MakeUppercase{\ptgroup}\ | }
}

\newcommand*{\linktopoem}[2][false]{%
  \newcommand*{\@ptfirstarg}{#1}
  \newcommand*{\@ptfalse}{false}
  \ifx \@ptfirstarg \@ptfalse
    \hyperref[\@ptpoemlabeltext#2]{#2}\relax
  \else
    \hyperref[\@ptpoemlabeltext#1]{#2}\relax
  \fi
}

\newcounter{poemnum}
\newcounter{absolutepoemnum}

\newcommand*{\resetnumongroup}{\newcommand*{\@ptresetnumongroup}{}}

\newcommand*{\numbertop}{\newcommand*{\@ptnumbertop}{}}

\newcommand*{\numberpoems}{\newcommand*{\@ptnumberpoems}{}}

\newcommand*{\ptgroup}{}

\newcommand*{\poemgroup}{%
  \@ifstar{%
    \@ptpoemgroupStar
  }{%
    \@ptpoemgroupNoStar
  }
}

\newcommand*{\@ptpoemgroupStar}[1]{%
  \ifx \@ptresetnumongroup \@ptundefined
    \relax
  \else
    \setcounter{poemnum}{0}
  \fi
  \cleardoublepage
  \vspace*{\fill}
  \renewcommand*{\ptgroup}{#1}
  \pagestyle{empty}
  \begin{center}
    \section*{#1}
  \end{center}
  \vspace*{\fill}
  \clearpage
}

\newcommand*{\@ptpoemgroupNoStar}[1]{%
  \ifx \@ptresetnumongroup \@ptundefined
    \relax
  \else
    \setcounter{poemnum}{0}
  \fi
  \cleardoublepage
  \vspace*{\fill}
  \renewcommand*{\ptgroup}{#1}
  \pagestyle{empty}
  \begin{center}
    \section{#1}
    \addcontentsline{lot}{section}{#1}
  \end{center}
  \vspace*{\fill}
  \clearpage
}

\newcommand*{\poemtitleformat}{\normalfont\bfseries\large\centering}

\newlength{\stanzaparskip}
\setlength{\stanzaparskip}{0.7em}

\newcommand*{\clearpageafterpoem}{\newcommand*{\@ptclearpageafterpoem}{}}

\newlength{\ptgap}
\setlength{\ptgap}{2em}

\newcommand*{\ptind}{%
  \@ifstar{%
    \@ptindStar
  }{%
    \@ptindNoStar
  }
}

\newcommand*{\@ptindStar}{\hspace*{\ptgap}}
\newcommand*{\@ptindNoStar}{\hspace{\ptgap}}

\newlength{\ptspacergap}
\setlength{\ptspacergap}{4em}

\newcommand*{\ptspacerchar}{\S}

\newcommand*{\ptspacer}{%
  \@ifstar{%
    \@ptspacerStar
  }{%
    \@ptspacerNoStar
  }
}

\newcommand*{\@ptspacerStar}{\hspace*{\ptspacergap}\ptspacerchar\ptspacerchar\ptspacerchar}
\newcommand*{\@ptspacerNoStar}{\hspace{\ptspacergap}\ptspacerchar\ptspacerchar\ptspacerchar}

\newenvironment{annotation}[1]{%
  \cleardoublepage
  \poetryheadings
  \begin{flushleft}
  \subsection{#1}
}{%

  \end{flushleft}
  \clearpage
}


\newcommand*{\defaultfontfamily}{Calluna}
\newcommand*{\fallbackfontfamily}{Georgia}

\count255=\interactionmode
  \batchmode
  \font\bodyfont="\defaultfontfamily"\space at 10pt
  \ifx\bodyfont\nullfont
    \font\bodyfont = "\fallbackfontfamily"\space at 10pt
    \ifx\bodyfont\nullfont
      \errorstopmode
      \errmessage{Default fonts not found.}
    \else
      \let\defaultfontfamily=\fallbackfontfamily
    \fi
  \fi
\interactionmode=\count255

\defaultfontfeatures{Mapping=tex-text, Ligatures=Common}

\setmainfont{\defaultfontfamily}

\newfontfamily\useligatures[Mapping=tex-text, Ligatures={Common, Rare}]{\defaultfontfamily}
\newfontfamily\usediscretionary[Mapping=tex-text, Ligatures={Discretionary, Common, Rare}]{\defaultfontfamily}
\newfontfamily\useordinals[Mapping=tex-text,VerticalPosition=Ordinal]{\defaultfontfamily}

\newcommand*{\altern}[1]{{\fontspec{\defaultfontfamily:+salt}#1}}
%    \end{macrocode}
%
%    \begin{macrocode}
\renewcommand*{\subsubsection}{%
  \@ifstar{\@ptsubsubsectionStar}{\@ptsubsubsectionNoStar}%
}

%% Backwards compatibility
\newcommand*{\@ptsubsubsectionStar}[1]{%

  \vspace{0.3cm}
  {\centering \textbf{#1}

  }
  \vspace{0.2cm}

}

\newcommand*{\@ptsubsubsectionNoStar}[1]{%

  \vspace{0.3cm}
  \phantomsection
  \addcontentsline{toc}{subsubsection}{#1}
  {\centering \textbf{#1}

  }
  \vspace{0.2cm}

}
%</poetrytex>
%    \end{macrocode}
%
% \clearpage
% \PrintChanges
%
% \clearpage
% \setcounter{IndexColumns}{2}
% \PrintIndex
%
% \Finale
%
% \iffalse
%<*doc-style>
%    \begin{macrocode}
\ProvidesPackage{poetrytex-style}

\usepackage{fancyvrb,hologo,multicol,url}

\fvset{gobble=2}

\newcommand*{\gitrev}{%
  \immediate\write18{%
    rm gitrev.tex 2> /dev/null; git rev-parse --short HEAD > gitrev.tex
  }%
  \InputIfFileExists{gitrev.tex}{.}{}\unskip%
  \immediate\write18{%
    rm gitrev.tex 2> /dev/null
  }%
}

\newcommand*{\gitdirty}{%
  \immediate\write18{%
    rm gitdirty.tex 2> /dev/null; git diff-files --quiet || echo "*" > gitdirty.tex
  }%
  \InputIfFileExists{gitdirty.tex}{\endlinechar=-1\relax}{}\unskip%
  \immediate\write18{%
    rm gitdirty.tex 2> /dev/null
  }%
}

\newcommand*{\gituncommitted}{%
  \immediate\write18{%
    rm gituncommitted.tex 2> /dev/null; git diff-index --quiet --cached HEAD || echo "+" > gituncommitted.tex
  }%
  \InputIfFileExists{gituncommitted.tex}{\endlinechar=-1\relax}{}\unskip%
  \immediate\write18{%
    rm gituncommitted.tex 2> /dev/null
  }%
}

\newcommand\XeTeX{\hologo{XeTeX}}
\newcommand\XeLaTeX{\hologo{XeLaTeX}}
\newcommand\LuaTeX{\hologo{LuaTeX}}
\newcommand\LuaLaTeX{\hologo{LuaLaTeX}}

\newcommand*\name[1]{\textsc{#1}}
\newcommand*\fname[1]{\textsf{#1}}
\newcommand*\pkg[1]{\textsf{#1}}
\newcommand*\code[1]{\texttt{#1}}

\renewcommand\partname{Part}
%    \end{macrocode}
%</doc-style>
%\fi
\endinput
